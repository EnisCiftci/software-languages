// automatically generated by Xtext
grammar org.xtext.example.mydsl.MyDsl with org.eclipse.xtext.common.Terminals

import "https://manufacturing.org/DSL" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

BinaryCondition returns BinaryCondition:
	'BinaryCondition'
	'{'
		('operator' operator=BinaryOperator)?
		'leftConditon' leftConditon=Conditon
		'rightConditon' rightConditon=Conditon
	'}';

Conditon returns Conditon:
	UnaryCondition | WorkPieceTypeCondition | BinaryCondition;


enum BinaryOperator returns BinaryOperator:
				AND = 'AND' | OR = 'OR';

UnaryCondition returns UnaryCondition:
	'UnaryCondition'
	'{'
		('operator' operator=UnaryOperator)?
		'conditon' conditon=Conditon
	'}';

WorkPieceTypeCondition returns WorkPieceTypeCondition:
	'WorkPieceTypeCondition'
	'{'
		'type' type=[WorkPieceType|EString]
	'}';

enum UnaryOperator returns UnaryOperator:
				NOT = 'NOT';

WorkPieceType returns WorkPieceType:
	{WorkPieceType}
	'WorkPieceType'
	name=EString;

EString returns ecore::EString:
	STRING | ID;
